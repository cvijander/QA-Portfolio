{
	"info": {
		"_postman_id": "0f0b285c-545e-40b4-bc47-c68a45676c10",
		"name": "Swagger Petstore",
		"description": "This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).  For this sample, you can use the api key `special-key` to test the authorization filters.\n\nContact Support:\n Email: apiteam@swagger.io",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "37707468",
		"_collection_link": "https://www.postman.com/security-candidate-50417017/workspace/my-workspace/collection/37707468-0f0b285c-545e-40b4-bc47-c68a45676c10?action=share&source=collection_link&creator=37707468"
	},
	"item": [
		{
			"name": "pet",
			"item": [
				{
					"name": "{petId}",
					"item": [
						{
							"name": "uploadImage",
							"item": [
								{
									"name": "uploads an image",
									"request": {
										"auth": {
											"type": "oauth2",
											"oauth2": [
												{
													"key": "scope",
													"value": "read:pets write:pets",
													"type": "string"
												},
												{
													"key": "authUrl",
													"value": "https://petstore.swagger.io/oauth/authorize",
													"type": "string"
												},
												{
													"key": "grant_type",
													"value": "implicit",
													"type": "string"
												}
											]
										},
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": [
												{
													"key": "additionalMetadata",
													"value": "irure eu",
													"description": "Additional data to pass to server",
													"type": "text"
												},
												{
													"key": "file",
													"description": "file to upload",
													"type": "file",
													"src": []
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId/uploadImage",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId",
												"uploadImage"
											],
											"variable": [
												{
													"key": "petId",
													"value": "-22429929",
													"description": "(Required) ID of pet to update"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													},
													{
														"key": "Authorization",
														"value": "<token>",
														"description": "Added as a part of security scheme: oauth2"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": [
														{
															"key": "additionalMetadata",
															"value": "irure eu",
															"description": "Additional data to pass to server",
															"type": "text"
														},
														{
															"key": "file",
															"description": "file to upload",
															"type": "file",
															"src": []
														}
													]
												},
												"url": {
													"raw": "{{baseUrl}}/pet/:petId/uploadImage",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"pet",
														":petId",
														"uploadImage"
													],
													"variable": [
														{
															"key": "petId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"code\": -21582245,\n  \"type\": \"et pariatur exercitation\",\n  \"message\": \"ad sint nisi occaecat amet\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "Find pet by ID",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "-22429929",
											"description": "(Required) ID of pet to return"
										}
									]
								},
								"description": "Returns a single pet"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "api_key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"fugiat dolor non\",\n    \"anim cillum\"\n  ],\n  \"id\": 57519724,\n  \"category\": {\n    \"id\": -44610833,\n    \"name\": \"dolor veniam id dolore\"\n  },\n  \"tags\": [\n    {\n      \"id\": -45368363,\n      \"name\": \"tempor eiusmod ipsum exercitation\"\n    },\n    {\n      \"id\": 76285003,\n      \"name\": \"dolor cupidatat veniam\"\n    }\n  ],\n  \"status\": \"available\"\n}"
								},
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "api_key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "api_key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updates a pet in the store with form data",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/x-www-form-urlencoded"
									}
								],
								"body": {
									"mode": "urlencoded",
									"urlencoded": [
										{
											"key": "name",
											"value": "consectetur veniam in",
											"description": "Updated name of the pet"
										},
										{
											"key": "status",
											"value": "elit quis Ut commodo",
											"description": "Updated status of the pet"
										}
									]
								},
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "-22429929",
											"description": "(Required) ID of pet that needs to be updated"
										}
									]
								}
							},
							"response": [
								{
									"name": "Invalid input",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/x-www-form-urlencoded"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"body": {
											"mode": "urlencoded",
											"urlencoded": [
												{
													"key": "name",
													"value": "consectetur veniam in",
													"description": "Updated name of the pet"
												},
												{
													"key": "status",
													"value": "elit quis Ut commodo",
													"description": "Updated status of the pet"
												}
											]
										},
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Method Not Allowed",
									"code": 405,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Deletes a pet",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [
									{
										"key": "api_key",
										"value": "dolor et amet anim Excepteur"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/:petId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										":petId"
									],
									"variable": [
										{
											"key": "petId",
											"value": "-22429929",
											"description": "(Required) Pet id to delete"
										}
									]
								}
							},
							"response": [
								{
									"name": "Invalid ID supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "dolor et amet anim Excepteur"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "Pet not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [
											{
												"key": "api_key",
												"value": "dolor et amet anim Excepteur"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/:petId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												":petId"
											],
											"variable": [
												{
													"key": "petId"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Create a new pet",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"id\": 262626,\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"string\"\r\n  },\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet/262626",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"262626"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "findByStatus",
					"item": [
						{
							"name": "Finds Pets by status",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=available",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByStatus"
									],
									"query": [
										{
											"key": "status",
											"value": "available",
											"description": "(Required) Status values that need to be considered for filter"
										},
										{
											"key": "status",
											"value": "available",
											"description": "(Required) Status values that need to be considered for filter"
										}
									]
								},
								"description": "Multiple status values can be provided with comma separated strings"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available",
													"description": "(Required) Status values that need to be considered for filter"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"deserunt mollit\",\n      \"dolore\"\n    ],\n    \"id\": 58388721,\n    \"category\": {\n      \"id\": 71201572,\n      \"name\": \"in incididunt sint\"\n    },\n    \"tags\": [\n      {\n        \"id\": -14313394,\n        \"name\": \"ea ut t\"\n      },\n      {\n        \"id\": 72013534,\n        \"name\": \"consectetur quis culpa\"\n      }\n    ],\n    \"status\": \"sold\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"sunt est adipisicing in deserunt\",\n      \"est irure\"\n    ],\n    \"id\": 85120150,\n    \"category\": {\n      \"id\": -18463035,\n      \"name\": \"ea\"\n    },\n    \"tags\": [\n      {\n        \"id\": 26531407,\n        \"name\": \"adipisicing enim minim commodo\"\n      },\n      {\n        \"id\": 56746969,\n        \"name\": \"irure in ea magn\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
								},
								{
									"name": "Invalid status value",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByStatus?status=available",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByStatus"
											],
											"query": [
												{
													"key": "status",
													"value": "available",
													"description": "(Required) Status values that need to be considered for filter"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "findByTags",
					"item": [
						{
							"name": "Finds Pets by tags",
							"request": {
								"auth": {
									"type": "oauth2",
									"oauth2": [
										{
											"key": "scope",
											"value": "read:pets write:pets",
											"type": "string"
										},
										{
											"key": "authUrl",
											"value": "https://petstore.swagger.io/oauth/authorize",
											"type": "string"
										},
										{
											"key": "grant_type",
											"value": "implicit",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/pet/findByTags?tags=labore sit dolore dolor culpa&tags=nisi deserunt id",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet",
										"findByTags"
									],
									"query": [
										{
											"key": "tags",
											"value": "labore sit dolore dolor culpa",
											"description": "(Required) Tags to filter by"
										},
										{
											"key": "tags",
											"value": "nisi deserunt id",
											"description": "(Required) Tags to filter by"
										}
									]
								},
								"description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing."
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByTags?tags=nisi deserunt id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByTags"
											],
											"query": [
												{
													"key": "tags",
													"value": "nisi deserunt id",
													"description": "(Required) Tags to filter by"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"deserunt mollit\",\n      \"dolore\"\n    ],\n    \"id\": 58388721,\n    \"category\": {\n      \"id\": 71201572,\n      \"name\": \"in incididunt sint\"\n    },\n    \"tags\": [\n      {\n        \"id\": -14313394,\n        \"name\": \"ea ut t\"\n      },\n      {\n        \"id\": 72013534,\n        \"name\": \"consectetur quis culpa\"\n      }\n    ],\n    \"status\": \"sold\"\n  },\n  {\n    \"name\": \"doggie\",\n    \"photoUrls\": [\n      \"sunt est adipisicing in deserunt\",\n      \"est irure\"\n    ],\n    \"id\": 85120150,\n    \"category\": {\n      \"id\": -18463035,\n      \"name\": \"ea\"\n    },\n    \"tags\": [\n      {\n        \"id\": 26531407,\n        \"name\": \"adipisicing enim minim commodo\"\n      },\n      {\n        \"id\": 56746969,\n        \"name\": \"irure in ea magn\"\n      }\n    ],\n    \"status\": \"pending\"\n  }\n]"
								},
								{
									"name": "Invalid tag value",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "<token>",
												"description": "Added as a part of security scheme: oauth2"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/pet/findByTags?tags=nisi deserunt id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"pet",
												"findByTags"
											],
											"query": [
												{
													"key": "tags",
													"value": "nisi deserunt id",
													"description": "(Required) Tags to filter by"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Add a new pet to the store (happy path)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// provera da li je test status 200\r",
									"\r",
									"pm.test(\"Status is 200\" , function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// provera da li je id broj \r",
									"pm.test(\"ID of a Vucko is a number\", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.id).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Id from Vucko is a number\", function() {\r",
									"    var vuckoId = pm.response.json().id;\r",
									"    pm.expect(vuckoId).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"// uzimanje id za kasnije podatke\r",
									"let dogId = pm.response.json().id;\r",
									"pm.collectionVariables.set(\"pet_ID\",dogId);\r",
									"\r",
									"// da li ima sliku \r",
									"pm.test(\"Does image egists\" , function() {\r",
									"    let imageUrl = pm.response.json().imageUrl;\r",
									"    pm.expect(imageUrl).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"// da li imate kategorija \r",
									"pm.test(\"Category has name 'dogs' \", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.category.name).to.eql(\"dogs\");\r",
									"});\r",
									"\r",
									"// provera da li je status psa available \r",
									"pm.test(\"Verify pet is available\", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.status).to.eql(\"available\");\r",
									"});\r",
									"\r",
									"// provera da li postoji tag friendly \r",
									"pm.test(\"Verify pet tag friendly\" , function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.tags.name).to.eql(\"friendly\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 260260260,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"dogs\"\n  },\n  \"name\": \"Vucko\",\n  \"photoUrls\": [\n    \"https://scontent.fbeg10-1.fna.fbcdn.net/v/t39.30808-6/464265904_8718019838258636_2868834979414991522_n.jpg?_nc_cat=107&ccb=1-7&_nc_sid=a5f93a&_nc_ohc=IMaqAKvwW4UQ7kNvwFzlQJf&_nc_oc=AdnBnX7sEZjWl5cCSZqWGDS660F9h5QjX1ZMi9er-qSn5M0w3GYZFTzB38tGbOWvIx8&_nc_zt=23&_nc_ht=scontent.fbeg10-1.fna&_nc_gid=HIn1lKbrrAyiBvMEYh6F9w&oh=00_AfNIhbkUsifJ5PU9XpJMhTtgybv7KZVuN_q_WcZvP8-gWw&oe=685632B0\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"friendly\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"fugiat dolor non\",\n    \"anim cillum\"\n  ],\n  \"id\": 57519724,\n  \"category\": {\n    \"id\": -44610833,\n    \"name\": \"dolor veniam id dolore\"\n  },\n  \"tags\": [\n    {\n      \"id\": -45368363,\n      \"name\": \"tempor eiusmod ipsum exercitation\"\n    },\n    {\n      \"id\": 76285003,\n      \"name\": \"dolor cupidatat veniam\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a new pet to the store (negative path - empty body)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// provera da li je test status 405\r",
									"\r",
									"pm.test(\"Status is 405 \", function() {\r",
									"    pm.response.to.have.status(405);\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"fugiat dolor non\",\n    \"anim cillum\"\n  ],\n  \"id\": 57519724,\n  \"category\": {\n    \"id\": -44610833,\n    \"name\": \"dolor veniam id dolore\"\n  },\n  \"tags\": [\n    {\n      \"id\": -45368363,\n      \"name\": \"tempor eiusmod ipsum exercitation\"\n    },\n    {\n      \"id\": 76285003,\n      \"name\": \"dolor cupidatat veniam\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Add a new pet to the store (negative path -  body with only {})",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// provera da li je test status 200\r",
									"\r",
									"pm.test(\"Status is 200 it creates an object without information \", function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Api allows to create empty pet - this is invalid\", function (){\r",
									" pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status is 200\" , function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// provera da li je id broj \r",
									"pm.test(\"ID of a Vucko is a number\", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.id).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Id from Vucko is a number\", function() {\r",
									"    var vuckoId = pm.response.json().id;\r",
									"    pm.expect(vuckoId).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"// uzimanje id za kasnije podatke\r",
									"let dogId = pm.response.json().id;\r",
									"pm.collectionVariables.set(\"pet_ID\",dogId);\r",
									"\r",
									"// da li ima sliku \r",
									"pm.test(\"Does image egists\" , function() {\r",
									"    let imageUrl = pm.response.json().imageUrl;\r",
									"    pm.expect(imageUrl).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"// da li imate kategorija \r",
									"pm.test(\"Category has name 'dogs' \", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.category.name).to.eql(\"dogs\");\r",
									"});\r",
									"\r",
									"// provera da li je status psa available \r",
									"pm.test(\"Verify pet is available\", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.status).to.eql(\"available\");\r",
									"});\r",
									"\r",
									"// provera da li postoji tag friendly \r",
									"pm.test(\"Verify pet tag friendly\" , function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.tags.name).to.eql(\"friendly\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": [
						{
							"name": "Invalid input",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"fugiat dolor non\",\n    \"anim cillum\"\n  ],\n  \"id\": 57519724,\n  \"category\": {\n    \"id\": -44610833,\n    \"name\": \"dolor veniam id dolore\"\n  },\n  \"tags\": [\n    {\n      \"id\": -45368363,\n      \"name\": \"tempor eiusmod ipsum exercitation\"\n    },\n    {\n      \"id\": 76285003,\n      \"name\": \"dolor cupidatat veniam\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Update an existing pet",
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"fugiat dolor non\",\n    \"anim cillum\"\n  ],\n  \"id\": 57519724,\n  \"category\": {\n    \"id\": -44610833,\n    \"name\": \"dolor veniam id dolore\"\n  },\n  \"tags\": [\n    {\n      \"id\": -45368363,\n      \"name\": \"tempor eiusmod ipsum exercitation\"\n    },\n    {\n      \"id\": 76285003,\n      \"name\": \"dolor cupidatat veniam\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": [
						{
							"name": "Invalid ID supplied",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"fugiat dolor non\",\n    \"anim cillum\"\n  ],\n  \"id\": 57519724,\n  \"category\": {\n    \"id\": -44610833,\n    \"name\": \"dolor veniam id dolore\"\n  },\n  \"tags\": [\n    {\n      \"id\": -45368363,\n      \"name\": \"tempor eiusmod ipsum exercitation\"\n    },\n    {\n      \"id\": 76285003,\n      \"name\": \"dolor cupidatat veniam\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Pet not found",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"fugiat dolor non\",\n    \"anim cillum\"\n  ],\n  \"id\": 57519724,\n  \"category\": {\n    \"id\": -44610833,\n    \"name\": \"dolor veniam id dolore\"\n  },\n  \"tags\": [\n    {\n      \"id\": -45368363,\n      \"name\": \"tempor eiusmod ipsum exercitation\"\n    },\n    {\n      \"id\": 76285003,\n      \"name\": \"dolor cupidatat veniam\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Validation exception",
							"originalRequest": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Authorization",
										"value": "<token>",
										"description": "Added as a part of security scheme: oauth2"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"doggie\",\n  \"photoUrls\": [\n    \"fugiat dolor non\",\n    \"anim cillum\"\n  ],\n  \"id\": 57519724,\n  \"category\": {\n    \"id\": -44610833,\n    \"name\": \"dolor veniam id dolore\"\n  },\n  \"tags\": [\n    {\n      \"id\": -45368363,\n      \"name\": \"tempor eiusmod ipsum exercitation\"\n    },\n    {\n      \"id\": 76285003,\n      \"name\": \"dolor cupidatat veniam\"\n    }\n  ],\n  \"status\": \"available\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/pet",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"pet"
									]
								}
							},
							"status": "Method Not Allowed",
							"code": 405,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				},
				{
					"name": "Find Vucko By Id (happy path)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// provera da li je test status 200\r",
									"\r",
									"pm.test(\"Status is 200\" , function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// provera da li je id broj \r",
									"pm.test(\"ID of a Vucko is a number\", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.id).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Id from Vucko is a number\", function() {\r",
									"    var vuckoId = pm.response.json().id;\r",
									"    pm.expect(vuckoId).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"// uzimanje id za kasnije podatke\r",
									"let dogId = pm.response.json().id;\r",
									"pm.collectionVariables.set(\"pet_ID\",dogId);\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"// da li imate kategorija \r",
									"pm.test(\"Category has name 'dogs' \", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.category.name).to.eql(\"dogs\");\r",
									"});\r",
									"\r",
									"// provera da li je status psa available \r",
									"pm.test(\"Verify pet is available\", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.status).to.eql(\"available\");\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/{{pet_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{pet_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Vucko By Id (negative path not found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"// provera da li je test status 404\r",
									"\r",
									"pm.test(\"Status is 404 not found\" , function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/260260260260260260260",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"260260260260260260260"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Vucko info (happy path)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// provera da li je test status 200\r",
									"\r",
									"pm.test(\"Status is 200\" , function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"// provera da li je id broj \r",
									"pm.test(\"ID of a Vucko is a number\", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.id).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"pm.test(\"Id from Vucko is a number\", function() {\r",
									"    var vuckoId = pm.response.json().id;\r",
									"    pm.expect(vuckoId).to.be.a(\"number\");\r",
									"});\r",
									"\r",
									"// uzimanje id za kasnije podatke\r",
									"let dogId = pm.response.json().id;\r",
									"pm.collectionVariables.set(\"pet_ID\",dogId);\r",
									"\r",
									"// da li ima sliku \r",
									"pm.test(\"Does image egists\" , function() {\r",
									"    let imageUrl = pm.response.json().imageUrl;\r",
									"    pm.expect(imageUrl).to.be.a(\"string\");\r",
									"});\r",
									"\r",
									"// da li imate kategorija \r",
									"pm.test(\"Category has name 'dogs' \", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.category.name).to.eql(\"dogs\");\r",
									"});\r",
									"\r",
									"// provera da li je status psa available \r",
									"pm.test(\"Verify pet is sold\", function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.status).to.eql(\"sold\");\r",
									"});\r",
									"\r",
									"// provera da li postoji tag friendly \r",
									"pm.test(\"Verify pet tag friendly\" , function() {\r",
									"    var jsonPetData = pm.response.json();\r",
									"    pm.expect(jsonPetData.tags.name).to.eql(\"friendly\");\r",
									"});\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 260260260,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"dogs\"\n  },\n  \"name\": \"Vucko\",\n  \"photoUrls\": [\n    \"https://scontent.fbeg10-1.fna.fbcdn.net/v/t39.30808-6/464265904_8718019838258636_2868834979414991522_n.jpg?_nc_cat=107&ccb=1-7&_nc_sid=a5f93a&_nc_ohc=IMaqAKvwW4UQ7kNvwFzlQJf&_nc_oc=AdnBnX7sEZjWl5cCSZqWGDS660F9h5QjX1ZMi9er-qSn5M0w3GYZFTzB38tGbOWvIx8&_nc_zt=23&_nc_ht=scontent.fbeg10-1.fna&_nc_gid=HIn1lKbrrAyiBvMEYh6F9w&oh=00_AfNIhbkUsifJ5PU9XpJMhTtgybv7KZVuN_q_WcZvP8-gWw&oe=685632B0\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"friendly\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update non Vucko info (negativen path) server error",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// provera da li je test status 500\r",
									"\r",
									"pm.test(\"Status is 500, server error\" , function() {\r",
									"    pm.response.to.have.status(500);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 260260260260260260260,\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"dogs\"\n  },\n  \"name\": \"Vucko non exists\",\n  \"photoUrls\": [\n    \"https://scontent.fbeg10-1.fna.fbcdn.net/v/t39.30808-6/464265904_8718019838258636_2868834979414991522_n.jpg?_nc_cat=107&ccb=1-7&_nc_sid=a5f93a&_nc_ohc=IMaqAKvwW4UQ7kNvwFzlQJf&_nc_oc=AdnBnX7sEZjWl5cCSZqWGDS660F9h5QjX1ZMi9er-qSn5M0w3GYZFTzB38tGbOWvIx8&_nc_zt=23&_nc_ht=scontent.fbeg10-1.fna&_nc_gid=HIn1lKbrrAyiBvMEYh6F9w&oh=00_AfNIhbkUsifJ5PU9XpJMhTtgybv7KZVuN_q_WcZvP8-gWw&oe=685632B0\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"friendly\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Vucko (happy path)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// provera da li je test status 200\r",
									"\r",
									"pm.test(\"Status is 200\" , function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let result = pm.response.json();\r",
									"let resultID = pm.collectionVariables.get(\"pet_ID\");\r",
									"\r",
									"pm.test(`Your pet with ${resultID} is deleted` , function (){\r",
									"  pm.expect(result.message).to.eql(resultID.toString());\r",
									"} );\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/{{pet_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{pet_ID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Remove Vucko (negative path)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"\r",
									"// provera da li je test status 404\r",
									"\r",
									"pm.test(\"Status is 404 , Vucko not found\" , function() {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "oauth2",
							"oauth2": [
								{
									"key": "scope",
									"value": "read:pets write:pets",
									"type": "string"
								},
								{
									"key": "authUrl",
									"value": "https://petstore.swagger.io/oauth/authorize",
									"type": "string"
								},
								{
									"key": "grant_type",
									"value": "implicit",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/pet/{{pet_ID}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{pet_ID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "store",
			"item": [
				{
					"name": "inventory",
					"item": [
						{
							"name": "Returns pet inventories by status",
							"request": {
								"auth": {
									"type": "apikey",
									"apikey": [
										{
											"key": "key",
											"value": "api_key",
											"type": "string"
										},
										{
											"key": "value",
											"value": "{{apiKey}}",
											"type": "string"
										},
										{
											"key": "in",
											"value": "header",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/store/inventory",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"inventory"
									]
								},
								"description": "Returns a map of status codes to quantities"
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											},
											{
												"key": "api_key",
												"value": "<API Key>",
												"description": "Added as a part of security scheme: apikey"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/store/inventory",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"inventory"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"in__0\": -34932854\n}"
								}
							]
						}
					]
				},
				{
					"name": "order",
					"item": [
						{
							"name": "{orderId}",
							"item": [
								{
									"name": "Find purchase order by ID",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId",
													"value": "2",
													"description": "(Required) ID of pet that needs to be fetched"
												}
											]
										},
										"description": "For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"id\": 15614410,\n  \"petId\": 33728787,\n  \"quantity\": 85092604,\n  \"shipDate\": \"1949-03-22T01:14:25.008Z\",\n  \"status\": \"approved\",\n  \"complete\": false\n}"
										},
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Order not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Delete purchase order by ID",
									"request": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/store/order/:orderId",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order",
												":orderId"
											],
											"variable": [
												{
													"key": "orderId",
													"value": "26833095",
													"description": "(Required) ID of the order that needs to be deleted"
												}
											]
										},
										"description": "For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors"
									},
									"response": [
										{
											"name": "Invalid ID supplied",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Order not found",
											"originalRequest": {
												"method": "DELETE",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/store/order/:orderId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"store",
														"order",
														":orderId"
													],
													"variable": [
														{
															"key": "orderId"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "Place an order for a pet",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": 15614410,\n  \"petId\": 33728787,\n  \"quantity\": 85092604,\n  \"shipDate\": \"1949-03-22T01:14:25.008Z\",\n  \"status\": \"approved\",\n  \"complete\": false\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/store/order",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"store",
										"order"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 15614410,\n  \"petId\": 33728787,\n  \"quantity\": 85092604,\n  \"shipDate\": \"1949-03-22T01:14:25.008Z\",\n  \"status\": \"approved\",\n  \"complete\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": 15614410,\n  \"petId\": 33728787,\n  \"quantity\": 85092604,\n  \"shipDate\": \"1949-03-22T01:14:25.008Z\",\n  \"status\": \"approved\",\n  \"complete\": false\n}"
								},
								{
									"name": "Invalid Order",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": 15614410,\n  \"petId\": 33728787,\n  \"quantity\": 85092604,\n  \"shipDate\": \"1949-03-22T01:14:25.008Z\",\n  \"status\": \"approved\",\n  \"complete\": false\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/store/order",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"store",
												"order"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "createWithList",
					"item": [
						{
							"name": "Creates list of users with given input array",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": 65301635,\n    \"username\": \"consequat laborum\",\n    \"firstName\": \"amet exercitation\",\n    \"lastName\": \"Excepteur pariatur amet\",\n    \"email\": \"officia non\",\n    \"password\": \"labore pariatur irure Lorem\",\n    \"phone\": \"nisi culpa id\",\n    \"userStatus\": 26152776\n  },\n  {\n    \"id\": 19364350,\n    \"username\": \"minim ipsum nos\",\n    \"firstName\": \"eiusmod amet\",\n    \"lastName\": \"qui consequa\",\n    \"email\": \"pariatur velit\",\n    \"password\": \"dolore sit cillum consectetur\",\n    \"phone\": \"nis\",\n    \"userStatus\": 87464881\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/createWithList",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"createWithList"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": 65301635,\n    \"username\": \"consequat laborum\",\n    \"firstName\": \"amet exercitation\",\n    \"lastName\": \"Excepteur pariatur amet\",\n    \"email\": \"officia non\",\n    \"password\": \"labore pariatur irure Lorem\",\n    \"phone\": \"nisi culpa id\",\n    \"userStatus\": 26152776\n  },\n  {\n    \"id\": 19364350,\n    \"username\": \"minim ipsum nos\",\n    \"firstName\": \"eiusmod amet\",\n    \"lastName\": \"qui consequa\",\n    \"email\": \"pariatur velit\",\n    \"password\": \"dolore sit cillum consectetur\",\n    \"phone\": \"nis\",\n    \"userStatus\": 87464881\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/createWithList",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"createWithList"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "{username}",
					"item": [
						{
							"name": "Get user by user name",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "dolor et amet anim Excepteur",
											"description": "(Required) The name that needs to be fetched. Use user1 for testing. "
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"id\": -78853597,\n  \"username\": \"ex magna\",\n  \"firstName\": \"esse Excepteur deserunt\",\n  \"lastName\": \"dolor sed laboris deserunt\",\n  \"email\": \"ut enim eu laboris\",\n  \"password\": \"esse veniam a\",\n  \"phone\": \"fugiat ipsum pariatur\",\n  \"userStatus\": -22034471\n}"
								},
								{
									"name": "Invalid username supplied",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Updated user",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -78853597,\n  \"username\": \"ex magna\",\n  \"firstName\": \"esse Excepteur deserunt\",\n  \"lastName\": \"dolor sed laboris deserunt\",\n  \"email\": \"ut enim eu laboris\",\n  \"password\": \"esse veniam a\",\n  \"phone\": \"fugiat ipsum pariatur\",\n  \"userStatus\": -22034471\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "dolor et amet anim Excepteur",
											"description": "(Required) name that need to be updated"
										}
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"response": [
								{
									"name": "Invalid user supplied",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -78853597,\n  \"username\": \"ex magna\",\n  \"firstName\": \"esse Excepteur deserunt\",\n  \"lastName\": \"dolor sed laboris deserunt\",\n  \"email\": \"ut enim eu laboris\",\n  \"password\": \"esse veniam a\",\n  \"phone\": \"fugiat ipsum pariatur\",\n  \"userStatus\": -22034471\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"id\": -78853597,\n  \"username\": \"ex magna\",\n  \"firstName\": \"esse Excepteur deserunt\",\n  \"lastName\": \"dolor sed laboris deserunt\",\n  \"email\": \"ut enim eu laboris\",\n  \"password\": \"esse veniam a\",\n  \"phone\": \"fugiat ipsum pariatur\",\n  \"userStatus\": -22034471\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						},
						{
							"name": "Delete user",
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "dolor et amet anim Excepteur",
											"description": "(Required) The name that needs to be deleted"
										}
									]
								},
								"description": "This can only be done by the logged in user."
							},
							"response": [
								{
									"name": "Invalid username supplied",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								},
								{
									"name": "User not found",
									"originalRequest": {
										"method": "DELETE",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												":username"
											],
											"variable": [
												{
													"key": "username"
												}
											]
										}
									},
									"status": "Not Found",
									"code": 404,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "login",
					"item": [
						{
							"name": "Logs user into the system",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/user/login?username=dolor et amet anim Excepteur&password=dolor et amet anim Excepteur",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"login"
									],
									"query": [
										{
											"key": "username",
											"value": "dolor et amet anim Excepteur",
											"description": "(Required) The user name for login"
										},
										{
											"key": "password",
											"value": "dolor et amet anim Excepteur",
											"description": "(Required) The password for login in clear text"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/user/login?username=dolor et amet anim Excepteur&password=dolor et amet anim Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"key": "username",
													"value": "dolor et amet anim Excepteur",
													"description": "(Required) The user name for login"
												},
												{
													"key": "password",
													"value": "dolor et amet anim Excepteur",
													"description": "(Required) The password for login in clear text"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										},
										{
											"key": "X-Expires-After",
											"value": "2024-07-21T05:39:35.098Z",
											"description": {
												"content": "date in UTC when token expires",
												"type": "text/plain"
											}
										},
										{
											"key": "X-Rate-Limit",
											"value": "19597639",
											"description": {
												"content": "calls per hour allowed by the user",
												"type": "text/plain"
											}
										}
									],
									"cookie": [],
									"body": "dolor et amet anim Excepteur"
								},
								{
									"name": "Invalid username/password supplied",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/login?username=dolor et amet anim Excepteur&password=dolor et amet anim Excepteur",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"login"
											],
											"query": [
												{
													"key": "username",
													"value": "dolor et amet anim Excepteur",
													"description": "(Required) The user name for login"
												},
												{
													"key": "password",
													"value": "dolor et amet anim Excepteur",
													"description": "(Required) The password for login in clear text"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "logout",
					"item": [
						{
							"name": "Logs out current logged in user session",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"logout"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/user/logout",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"logout"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "createWithArray",
					"item": [
						{
							"name": "Creates list of users with given input array",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "[\n  {\n    \"id\": 65301635,\n    \"username\": \"consequat laborum\",\n    \"firstName\": \"amet exercitation\",\n    \"lastName\": \"Excepteur pariatur amet\",\n    \"email\": \"officia non\",\n    \"password\": \"labore pariatur irure Lorem\",\n    \"phone\": \"nisi culpa id\",\n    \"userStatus\": 26152776\n  },\n  {\n    \"id\": 19364350,\n    \"username\": \"minim ipsum nos\",\n    \"firstName\": \"eiusmod amet\",\n    \"lastName\": \"qui consequa\",\n    \"email\": \"pariatur velit\",\n    \"password\": \"dolore sit cillum consectetur\",\n    \"phone\": \"nis\",\n    \"userStatus\": 87464881\n  }\n]",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user/createWithArray",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										"createWithArray"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  {\n    \"id\": 65301635,\n    \"username\": \"consequat laborum\",\n    \"firstName\": \"amet exercitation\",\n    \"lastName\": \"Excepteur pariatur amet\",\n    \"email\": \"officia non\",\n    \"password\": \"labore pariatur irure Lorem\",\n    \"phone\": \"nisi culpa id\",\n    \"userStatus\": 26152776\n  },\n  {\n    \"id\": 19364350,\n    \"username\": \"minim ipsum nos\",\n    \"firstName\": \"eiusmod amet\",\n    \"lastName\": \"qui consequa\",\n    \"email\": \"pariatur velit\",\n    \"password\": \"dolore sit cillum consectetur\",\n    \"phone\": \"nis\",\n    \"userStatus\": 87464881\n  }\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/user/createWithArray",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"user",
												"createWithArray"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "Create user",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": -78853597,\n  \"username\": \"ex magna\",\n  \"firstName\": \"esse Excepteur deserunt\",\n  \"lastName\": \"dolor sed laboris deserunt\",\n  \"email\": \"ut enim eu laboris\",\n  \"password\": \"esse veniam a\",\n  \"phone\": \"fugiat ipsum pariatur\",\n  \"userStatus\": -22034471\n}",
							"options": {
								"raw": {
									"headerFamily": "json",
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						},
						"description": "This can only be done by the logged in user."
					},
					"response": [
						{
							"name": "successful operation",
							"originalRequest": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -78853597,\n  \"username\": \"ex magna\",\n  \"firstName\": \"esse Excepteur deserunt\",\n  \"lastName\": \"dolor sed laboris deserunt\",\n  \"email\": \"ut enim eu laboris\",\n  \"password\": \"esse veniam a\",\n  \"phone\": \"fugiat ipsum pariatur\",\n  \"userStatus\": -22034471\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "text",
							"header": [],
							"cookie": [],
							"body": ""
						}
					]
				}
			]
		},
		{
			"name": "Chain",
			"item": [
				{
					"name": "Find pet by ID",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Add a new pet to the store",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "testovi Add a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// use the 'pm.*' API to write your test\r",
									"\r",
									"pm.test(\"Verify set all values correct\",function () {\r",
									"    // var - varijabla \r",
									"    //jasondata jednaka odgovoru\r",
									"    //value id, status \r",
									"\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.status).to.eql(\"available\");\r",
									"    //id je broj\r",
									"    pm.expect(jsonData.id).that.is.a('number');\r",
									"} );\r",
									"\r",
									"// the pm.test() method accepsts 2 parameters \r",
									"// the first parameter is the name of your test (be descriptive)\r",
									"// the second parameter is a function whereby if any assertions within your function fail, \r",
									"// then the test will fail \r",
									"\r",
									"pm.test(\"Status code is 200\", function() {\r",
									" pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Verify status code is 200\" , function() {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"let id = pm.response.json().id;\r",
									"pm.collectionVariables.set(\"pet_ID\",id);\r",
									"\r",
									"// proovera headera \r",
									"pm.test(\"Content-Type is present\", function() {\r",
									"  pm.response.to.have.header(\"Content-Type\");\r",
									"\r",
									"});\r",
									"\r",
									"// mozemo testirati vreme odgovora \r",
									"pm.test(\"Response time is less than 300ms\" , function() {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"packages": {},
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/pet/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								""
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "value",
				"value": "special-key",
				"type": "string"
			},
			{
				"key": "key",
				"value": "api_key",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2"
		},
		{
			"key": "pet_ID",
			"value": ""
		}
	]
}